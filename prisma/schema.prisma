generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("SERVICE_LAYER_DATABASE_URL")
  schemas  = ["indicadores_cuidado_mockups","dados_nominais_datalake"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model HypertensionAcfItem {
  patientId                          Int       @map("cidadao_id")
  municipalitySusId                  String    @db.VarChar(6) @map("municipio_id_sus")
  municipalityName                   String    @map("municipio_nome")
  patientName                        String    @map("cidadao_nome")
  patientCpf                         String    @db.VarChar(14) @map("cidadao_cpf")
  latestAppointmentDate              DateTime? @db.Date @map("data_ultima_consulta")
  appointmentStatusByQuarter         Int       @db.SmallInt @map("situacao_quadrimestre_consulta")
  latestExamRequestDate              DateTime? @db.Date @map("data_ultima_afericao_pa")
  latestExamRequestStatusByQuarter   Int       @db.SmallInt @map("situacao_quadrimestre_pa")
  careTeamName                       String?   @map("equipe_nome")
  careTeamIne                        String?   @map("equipe_ine")
  microAreaName                      String?   @map("equipe_microarea")
  patientPhoneNumber                 String?   @map("cidadao_telefone")
  patientAge                         Int       @map("cidadao_idade")

  @@id([patientId, municipalitySusId], map: "pk_lista_nominal_hipertensos")
  @@schema("indicadores_cuidado_mockups")
  @@map("lista_nominal_hipertensos")
}

model DiabetesAcfItem {
  id                                               String    @id(map: "painel_diabeticos_pk")
  municipalitySusId                                String?   @db.VarChar @map("municipio_id_sus")
  municipalityState                                String?   @map("municipio_uf")
  latestExamRequestDate                            String?   @db.VarChar(11) @map("dt_solicitacao_hemoglobina_glicada_mais_recente")
  mostRecentAppointmentDate                        DateTime? @db.Date @map("dt_consulta_mais_recente")
  hemoglobinTestDueDate                            String?   @map("prazo_proxima_solicitacao_hemoglobina")
  nextAppointmentDueDate                           String?   @map("prazo_proxima_consulta") 
  patientStatus                                    String?   @map("status_usuario")
  conditionIdentifiedBy                            String?   @map("identificacao_condicao_diabetes")
  patientCpfOrBirthday                             String?   @map("cidadao_cpf_dt_nascimento")
  patientName                                      String?   @map("cidadao_nome")
  patientAge                                       Int?      @map("cidadao_idade")
  patientAgeRange                                  String?   @map("cidadao_faixa_etaria")
  careTeamIne                                      String?   @map("equipe_ine_cadastro")
  careTeamName                                     String?   @map("equipe_nome_cadastro")
  communityHealthWorker                            String?   @map("acs_nome_cadastro")
  mostRecentProductionRecordDate                   DateTime  @db.Date @map("dt_registro_producao_mais_recente")

  @@map("__painel_enfermeiras_lista_nominal_diabeticos")
  @@schema("dados_nominais_datalake")
}

model dados_agregados_area_logada {
  municipio_id_sus    String    @db.Char(6)
  equipe_ine          String
  indicador           String
  parametro_descricao String
  parametro_valor     Int
  atualizacao_data    DateTime? @db.Timestamp(6)

  @@id([municipio_id_sus, equipe_ine, indicador, parametro_descricao], map: "dados_agregados_area_logada_pk")
  @@schema("dados_nominais_datalake")
}